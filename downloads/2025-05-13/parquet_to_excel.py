import os
import pandas as pd

input_folder = '.'  # ‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏ü‡∏•‡πå‡∏≠‡∏¢‡∏π‡πà
output_file = './weather_data_2025_05_13.xlsx'

# ‡∏´‡∏≤‡πÑ‡∏ü‡∏•‡πå .parquet ‡∏à‡∏≤‡∏Å subfolders
parquet_files = []
for root, dirs, files in os.walk(input_folder):
    for file in files:
        if file.endswith('.parquet'):
            parquet_files.append(os.path.join(root, file))

print(f"üì¶ ‡∏û‡∏ö {len(parquet_files)} ‡πÑ‡∏ü‡∏•‡πå")

if not parquet_files:
    print("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå .parquet")
    exit(1)

# ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå .parquet ‡πÅ‡∏•‡∏∞‡∏£‡∏ß‡∏°
dfs = [pd.read_parquet(f) for f in parquet_files]

# ‡∏•‡∏ö‡πÇ‡∏ã‡∏ô‡πÄ‡∏ß‡∏•‡∏≤ (timezone) ‡πÉ‡∏ô‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå datetime
for df in dfs:
    for col in df.select_dtypes(include=['datetime']):
        # ‡∏•‡∏ö‡πÇ‡∏ã‡∏ô‡πÄ‡∏ß‡∏•‡∏≤
        if df[col].dt.tz is not None:
            df[col] = df[col].dt.tz_localize(None)
        # ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤ datetime ‡∏¢‡∏±‡∏á‡∏°‡∏µ‡πÇ‡∏ã‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        if df[col].dt.tz is not None:
            print(f"‚ö†Ô∏è ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå {col} ‡∏¢‡∏±‡∏á‡∏°‡∏µ‡πÇ‡∏ã‡∏ô‡πÄ‡∏ß‡∏•‡∏≤")
        else:
            print(f"‚úÖ ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå {col} ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÇ‡∏ã‡∏ô‡πÄ‡∏ß‡∏•‡∏≤")

# ‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
combined_df = pd.concat(dfs, ignore_index=True)

# ‡∏•‡∏ö‡πÇ‡∏ã‡∏ô‡πÄ‡∏ß‡∏•‡∏≤ (timezone) ‡∏ó‡∏∏‡∏Å‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÉ‡∏ô‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå datetime
for col in combined_df.select_dtypes(include=['datetime']):
    if combined_df[col].dt.tz is not None:
        combined_df[col] = combined_df[col].dt.tz_localize(None)

# üîÅ ‡∏•‡∏ö timezone ‡∏≠‡∏µ‡∏Å‡∏£‡∏≠‡∏ö‡πÉ‡∏ô combined_df (‡∏Å‡∏£‡∏ì‡∏µ‡∏¢‡∏±‡∏á‡∏´‡∏•‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠)
for col in combined_df.columns:
    if pd.api.types.is_datetime64_any_dtype(combined_df[col]):
        if hasattr(combined_df[col].dt, 'tz') and combined_df[col].dt.tz is not None:
            combined_df[col] = combined_df[col].dt.tz_localize(None)

# ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏ü‡∏•‡πå Excel
combined_df.to_excel(output_file, index=False, engine='openpyxl')

print(f"‚úÖ ‡πÅ‡∏õ‡∏•‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {output_file}")